---

- name: Install NFS
  package: name=nfs-utils state=present
  become: yes

- name: Mount disks
  mount: name=/data src='UUID=e483ef7a-27d3-4e80-b5aa-d26702ff6e12' fstype=ext4 state=mounted
  become: yes

- name: Create directories
  file: path=/data state=directory

- name: Export directories
  copy: content="/data 192.168.0.0/24(rw,all_squash,insecure)" dest=/etc/exports
  register: nfs_exports
  become: yes

- name: Restart NFS immediately if exports are updated.
  service: name=nfs-server state=restarted
  become: yes
  when: nfs_exports.changed

- name: Start NFS service
  service: name={{ item }} state=started enabled=yes
  become: yes
  with_items:
    - rpcbind
    - nfs-server

- name: Create directories
  file: path=/data/{{item}} state=directory
  with_items:
    - tv
    - movies
    - downloads
    - config/sonarr
    - config/radarr
    - config/nzbget

- name: Create nzbget container
  docker_container:
    name: nzbget
    image: linuxserver/nzbget
    restart_policy: unless-stopped
    published_ports:
      - 6789:6789
    env:
      PUID: 1000
      PGID: 1000
      TZ: Europe/Zurich
    volumes:
      - /data/config/nzbget:/config
      - /data/downloads:/downloads
  become: yes

- name: Create radarr container
  docker_container:
    name: radarr
    image: linuxserver/radarr
    links:
      - nzbget:nzbget
    restart_policy: unless-stopped
    published_ports:
      - 7878:7878
    env:
      PUID: 1000
      PGID: 1000
      TZ: Europe/Zurich
    volumes:
      - /data/config/radarr:/config
      - /data/movies:/movies
      - /data/downloads:/downloads
  become: yes

- name: Create sonarr container
  docker_container:
    name: sonarr
    image: linuxserver/sonarr
    links:
      - nzbget:nzbget
    restart_policy: unless-stopped
    published_ports:
      - 8989:8989
    env:
      PUID: 1000
      PGID: 1000
      TZ: Europe/Zurich
    volumes:
      - /data/config/sonarr:/config
      - /data/tv:/tv
      - /data/downloads:/downloads
  become: yes
