---

- name: Install NFS
  package: name=nfs-utils state=present
  become: yes

- name: Mount disks
  mount: name=/data src='UUID=e483ef7a-27d3-4e80-b5aa-d26702ff6e12' fstype=ext4 state=mounted
  become: yes

- name: Create directories
  file: path=/data state=directory mode=775 owner=lbischof group=nzbget
  become: yes

- name: Export directories
  copy: content="/data 192.168.0.0/24(rw,all_squash,insecure)" dest=/etc/exports
  register: nfs_exports
  become: yes

- name: Restart NFS immediately if exports are updated.
  service: name=nfs-server state=restarted
  become: yes
  when: nfs_exports.changed

- name: Start NFS service
  service: name={{ item }} state=started enabled=yes
  become: yes
  with_items:
    - rpcbind
    - nfs-server

- name: Install nzbget
  package: name=nzbget
  become: yes

- name: Install apps
  aur: name={{ item }}
  with_items:
    - nzbget-systemd
    - sonarr
    - radarr

- name: Create directories
  file: path=/data/{{item}} state=directory owner={{item}} group={{item}}
  become: yes
  with_items:
    - sonarr
    - radarr
    - nzbget

- name: Create systemd override directories
  file: path=/etc/systemd/system/{{item}}.service.d state=directory
  become: yes
  with_items:
    - sonarr
    - radarr

- name: Set correct groups
  copy: content="[Service]\nGroup=nzbget" dest=/etc/systemd/system/{{item}}.service.d/group.conf
  register: systemd_services
  become: yes
  with_items:
    - sonarr
    - radarr

- name: Reload systemd daemon
  systemd: daemon_reload=yes
  when: systemd_services.changed
  become: yes

- name: Restart services
  service: name={{ item }} state=restarted
  when: systemd_services.changed
  become: yes
  with_items:
    - sonarr
    - radarr

- name: Start services
  service: name={{ item }} state=started enabled=yes
  become: yes
  with_items:
    - nzbget
    - sonarr
    - radarr
