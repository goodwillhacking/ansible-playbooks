---
language: python
python: "2.7"

env:
  - ANSIBLE_VERSION=latest
  - ANSIBLE_VERSION=1.9.2
  - ANSIBLE_VERSION=1.9.1
  - ANSIBLE_VERSION=1.9.0.1
  - ANSIBLE_VERSION=1.8.4
  - ANSIBLE_VERSION=1.8.3
  - ANSIBLE_VERSION=1.8.2
  - ANSIBLE_VERSION=1.8.1
  - ANSIBLE_VERSION=1.8
  - ANSIBLE_VERSION=1.7.2
  - ANSIBLE_VERSION=1.7.1
  - ANSIBLE_VERSION=1.7
  - ANSIBLE_VERSION=1.6.9
  - ANSIBLE_VERSION=1.6.8
  - ANSIBLE_VERSION=1.6.7
  - ANSIBLE_VERSION=1.6.6
  - ANSIBLE_VERSION=1.6.5
  - ANSIBLE_VERSION=1.6.4
  - ANSIBLE_VERSION=1.6.3
  - ANSIBLE_VERSION=1.6.2
  - ANSIBLE_VERSION=1.6.10
  - ANSIBLE_VERSION=1.6.1
  - ANSIBLE_VERSION=1.6

branches:
  only:
    - master

before_install:
  - sudo apt-get update -qq

install:
  # Install Ansible.
  - if [ "$ANSIBLE_VERSION" = "latest" ]; then pip install ansible; else pip install ansible==$ANSIBLE_VERSION; fi

  # Add ansible.cfg to pick up roles path.
  - printf "[defaults]\nroles_path = ../" > ansible.cfg

script:
  # Check the role/playbook's syntax.
  - ansible-playbook -i tests/inventory tests/test.yml --syntax-check

  # Run the role/playbook with ansible-playbook.
  - ansible-playbook -i tests/inventory tests/test.yml --connection=local --sudo -vvvv

  # Run the role/playbook again, checking to make sure it's idempotent.
  - >
    ansible-playbook -i tests/inventory tests/test.yml --connection=local --sudo
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)

notifications:
  email: false
  hipchat:
    rooms:
      secure: qi4UoMiqm/1Wh+Me4aAp65qlOZebI1WIkwPDzyeabyQY+FU6HPBqVQgQwgrPNT7fLn56ODOuRyXrLQMiBB5qQdMyxat6cGd1xqZPVcOLf5M9KHBIIXCdDAKeb79T/yrI7P1p7s9oto8gmXYCLL2HQvEvYS8Pwn1sLwOrHUjfTxZ/T+RsMBcAau9FB7YuHNvtWa2QDc8xkQVC1xe09FFTfZq3IfHrdXZ9wCJeGOFGewzOAPcz0RooX1yCtWyRlMBjyE0uO4uj45xWtVhxCr9zitv5QPN2DayUO56DmlRfOFlGEvo3JxatjlIggC06UnxQlcF/LMG6pcsQWk2/SiemqF/J3UW7mChwBoWIvNpVX6SbXzPYEO79s0gG+eIVRMqn617wiKQ2EvdcsevPmkKS3DgGYMpzLHqhicUseH4BOC63uWSAqYuzzW3nGqiUKhuVKG70xjMy5xV55BAO5AyyAsu5YQ7YE1KkwlAQzmxGTmt9iQKpCEGE9yVraoskPNhzJwPToDPsf+ZMHSbkWYV5sIYj6TBWwgmHluiQeByRi0j/3JJCU4K/cF28lUvW7AEL19vvg/HO9zUrSCxmja8JQ+kB1xi2xHh4N3NQXfM9hY0I1vuVojEVvvvE1nQZ6RmWfWMr9HHFY3DKVFFELuu8aRQ6OE8AQ2eDOc06tYQ6f5o=
